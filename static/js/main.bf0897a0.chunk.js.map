{"version":3,"sources":["Components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","setState","console","log","toLocaleTimeString","prev","name","props","clearInterval","className","React","Component","App","clockName","Math","random","isClockVisible","Button","type","onClick","variant","color","ReactDOM","render","document","getElementById"],"mappings":"wQAIaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKH,MAAMI,QAAUC,aAAY,WAC/B,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAVP,gCAaE,SAAmBC,GACbA,EAAKC,OAASR,KAAKS,MAAMD,MAE3BJ,QAAQC,IAAR,qCACgCE,EAAKC,KADrC,eACgDR,KAAKS,MAAMD,SAjBjE,kCAsBE,WACEE,cAAcV,KAAKH,MAAMI,WAvB7B,oBA0BE,WACE,IAAQH,EAASE,KAAKH,MAAdC,KAER,OACE,oCACE,uBAAGa,UAAU,qBAAqBb,EAAKQ,2BA/B/C,GAA2BM,IAAMC,YCmDlBC,G,kNAhDbjB,MAAQ,CACNkB,UAAWC,KAAKC,SAChBC,gBAAgB,G,4CAGlB,WAAU,IAAD,OACCA,EAAmBlB,KAAKH,MAAxBqB,eAKR,OACE,yBAAKP,UAAU,OACb,yBAAKA,UAAU,eACb,uBAAGA,UAAU,sBAAb,iBACCO,GAAkB,kBAAC,EAAD,CAAOV,KAAMR,KAAKH,MAAMkB,aAE7C,yBAAKJ,UAAU,mBACb,kBAACQ,EAAA,EAAD,CACEC,KAAK,SACLC,QAbK,kBAAM,EAAKlB,SAAS,CAAEe,gBAAgB,KAc3CI,QAAQ,YACRC,MAAM,WAJR,cAQA,kBAACJ,EAAA,EAAD,CACEC,KAAK,SACLC,QApBK,kBAAM,EAAKlB,SAAS,CAAEe,gBAAgB,KAqB3CI,QAAQ,YACRC,MAAM,aAJR,cAQA,kBAACJ,EAAA,EAAD,CACEC,KAAK,SACLC,QA3BO,kBAAM,EAAKlB,SAAS,CAAEY,UAAWC,KAAKC,YA4B7CK,QAAQ,WACRC,MAAM,aAJR,yB,GAnCQX,IAAMC,YCFxBW,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.bf0897a0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Clock.scss';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.state.timerID = setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prev) {\n    if (prev.name !== this.props.name) {\n    // eslint-disable-next-line no-console\n      console.log(\n        `The Clock was renamed from ${prev.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerID);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <>\n        <p className=\"timer-block__time\">{date.toLocaleTimeString()}</p>\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Clock } from './Components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    clockName: Math.random(),\n    isClockVisible: false,\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n    const show = () => this.setState({ isClockVisible: true });\n    const hide = () => this.setState({ isClockVisible: false });\n    const random = () => this.setState({ clockName: Math.random() });\n\n    return (\n      <div className=\"app\">\n        <div className=\"timer-block\">\n          <p className=\"timer-block__title\">Current time:</p>\n          {isClockVisible && <Clock name={this.state.clockName} />}\n        </div>\n        <div className=\"control-buttons\">\n          <Button\n            type=\"button\"\n            onClick={show}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Show Clock\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={hide}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Hide Clock\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={random}\n            variant=\"outlined\"\n            color=\"secondary\"\n          >\n            Set random name\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}